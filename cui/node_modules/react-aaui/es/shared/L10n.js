import _Object$keys from 'babel-runtime/core-js/object/keys';
import _extends from 'babel-runtime/helpers/extends';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import createListenerCollection from './createListenerCollection';
import defaultValidationMessages from '../form/i18n/ValidationMsg.json';
import commonMessages from '../i18n/common/CommonMsg.json';
import { interpolate } from './utils';

var defaultValidationMsgKeys = {
  required: 'react-aaui.validation.required',
  limit: 'react-aaui.validation.limitation',
  max: 'react-aaui.validation.max',
  min: 'react-aaui.validation.min',
  invalid: 'react-aaui.validation.invalid'
};
var DEFAULT_LOCALE = 'en_US';

var L10n = function () {
  function L10n() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$locale = _ref.locale,
        locale = _ref$locale === undefined ? DEFAULT_LOCALE : _ref$locale,
        _ref$messages = _ref.messages,
        messages = _ref$messages === undefined ? {} : _ref$messages,
        _ref$config = _ref.config,
        config = _ref$config === undefined ? {} : _ref$config;

    _classCallCheck(this, L10n);

    this._locale = locale;
    this._messages = _extends({}, defaultValidationMessages[this._locale], commonMessages[this._locale], messages);
    this._config = config;

    this.initDefaultMsg();
    this.listeners = createListenerCollection();
  }

  L10n.prototype.initDefaultMsg = function initDefaultMsg() {
    var _this = this;

    _Object$keys(defaultValidationMsgKeys).forEach(function (k) {
      _this[k] = defaultValidationMsgKeys[k];
    });
  };

  L10n.prototype.notifiy = function notifiy() {
    this.listeners.notify();
  };

  L10n.prototype.subscribe = function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    return this.listeners.subscribe(listener);
  };

  L10n.prototype.formatMessage = function formatMessage(id, values) {
    var defaultMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

    var messages = this.messages;

    return messages[id] ? interpolate(messages[id], values) : defaultMessage;
  };

  _createClass(L10n, [{
    key: 'locale',
    get: function get() {
      return this._locale;
    },
    set: function set(value) {
      this._locale = value;
      this.notifiy();
    }
  }, {
    key: 'messages',
    get: function get() {
      return this._messages;
    },
    set: function set(value) {
      this._messages = value;
      this.notifiy();
    }
  }]);

  return L10n;
}();

export default L10n;