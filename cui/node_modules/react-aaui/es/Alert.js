import _taggedTemplateLiteralLoose from 'babel-runtime/helpers/taggedTemplateLiteralLoose';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _templateObject = _taggedTemplateLiteralLoose(['alert\n        alert-', '\n        ', '\n        ', ''], ['alert\n        alert-', '\n        ', '\n        ', '']);

import React, { PureComponent, PropTypes } from 'react';
import 'active.css/less/components/alert.less';

import { cls } from './shared/utils';

var bool = PropTypes.bool,
    string = PropTypes.string,
    func = PropTypes.func,
    object = PropTypes.object,
    any = PropTypes.any,
    oneOf = PropTypes.oneOf;


var icons = {
  success: 'success',
  warning: 'warn',
  danger: 'close-circle',
  info: 'info'
};

var propTypes = {
  type: oneOf(['success', 'warning', 'danger', 'info']).isRequired,
  className: string,
  style: object,
  noClose: bool,
  onClose: func,
  children: any
};

var defaultProps = {
  type: 'info',
  noClose: false
};

var Alert = function (_PureComponent) {
  _inherits(Alert, _PureComponent);

  function Alert() {
    _classCallCheck(this, Alert);

    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));
  }

  Alert.prototype.render = function render() {
    var _props = this.props,
        className = _props.className,
        style = _props.style,
        type = _props.type,
        noClose = _props.noClose,
        onClose = _props.onClose,
        children = _props.children;


    return React.createElement(
      'div',
      {
        className: cls(_templateObject, type, className || '', noClose ? undefined : 'alert-dismissable'),
        style: style
      },
      React.createElement('span', { className: 'icon-' + icons[type] }),
      children,
      noClose ? undefined : React.createElement(
        'button',
        { type: 'button', className: 'close', onClick: onClose },
        '\xD7'
      )
    );
  };

  return Alert;
}(PureComponent);

export default Alert;


Alert.displayName = 'AAUIAlert';
Alert.propTypes = propTypes;
Alert.defaultProps = defaultProps;