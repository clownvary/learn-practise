import _typeof from 'babel-runtime/helpers/typeof';
import _Object$keys from 'babel-runtime/core-js/object/keys';
export var tryJudgeFieldsValid = function tryJudgeFieldsValid() {
  var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return _Object$keys(errors).every(function (k) {
    var error = errors[k];

    if (error && (typeof error === 'undefined' ? 'undefined' : _typeof(error)) === 'object') {
      return tryJudgeFieldsValid(error);
    }

    return !errors[k];
  });
};

export var reduceFields = function reduceFields() {
  var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var values = {};
  var errors = {};
  var reducerKeys = _Object$keys(fields);

  for (var i = 0; i < reducerKeys.length; i += 1) {
    var key = reducerKeys[i];
    var field = fields[key];

    values[key] = field.value;

    if (field.errMsg) {
      errors[key] = field.errMsg;
    }
  }

  var isValid = tryJudgeFieldsValid(errors);

  return {
    values: values,
    errors: errors,
    isValid: isValid
  };
};