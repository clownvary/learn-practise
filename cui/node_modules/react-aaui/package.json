{
  "_args": [
    [
      {
        "raw": "react-aaui@git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
        "scope": null,
        "escapedName": "react-aaui",
        "name": "react-aaui",
        "rawSpec": "git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
        "spec": "ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
        "type": "git"
      },
      "/Users/garywang/work/cui"
    ]
  ],
  "_from": "git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
  "_id": "react-aaui@1.8.26",
  "_inCache": true,
  "_location": "/react-aaui",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-aaui@git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
    "scope": null,
    "escapedName": "react-aaui",
    "name": "react-aaui",
    "rawSpec": "git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
    "spec": "ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
    "type": "git"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#5ee7430b894a653a2b75b9201b44846754d61d3e",
  "_shasum": "82f5f9bd1f5024bbe0ac46a82e3ed030e8f37f5f",
  "_shrinkwrap": null,
  "_spec": "react-aaui@git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git#v1.8.26",
  "_where": "/Users/garywang/work/cui",
  "author": {
    "name": "Front End China",
    "email": "FrontEndChina@activenetwork.com"
  },
  "betterScripts": {
    "test": {
      "command": "jest --coverage",
      "env": {
        "NODE_ENV": "test"
      }
    },
    "parse-properties:common": {
      "command": "babel-node scripts/parse-properties.js",
      "env": {
        "PARSE_SRC": "src/i18n/common",
        "PARSE_DIST": "src/i18n/common",
        "PARSE_NAME": "CommonMsg.json"
      }
    },
    "parse-properties:form-validation": {
      "command": "babel-node scripts/parse-properties.js",
      "env": {
        "PARSE_SRC": "src/form/i18nValidationMsg",
        "PARSE_DIST": "src/form/i18n",
        "PARSE_NAME": "ValidationMsg.json"
      }
    },
    "parse-properties:form-localization": {
      "command": "babel-node scripts/parse-properties.js",
      "env": {
        "PARSE_SRC": "src/i18n",
        "PARSE_DIST": "i18n"
      }
    },
    "build": {
      "command": "babel-node scripts/build",
      "env": {
        "NODE_ENV": "production",
        "DEBUG": "react-aaui:*"
      }
    },
    "build-es": {
      "command": "babel ./src -d es --copy-files",
      "env": {
        "NODE_ENV": "production",
        "BABEL_ENV": "es",
        "DEBUG": "react-aaui:*"
      }
    },
    "build-cjs": {
      "command": "babel ./src -d lib --copy-files",
      "env": {
        "NODE_ENV": "production",
        "BABEL_ENV": "cjs",
        "DEBUG": "react-aaui:*"
      }
    },
    "build-umd": {
      "command": "babel-node scripts/compile --copy-files",
      "env": {
        "NODE_ENV": "development",
        "BABEL_ENV": "umd",
        "DEBUG": "react-aaui:*"
      }
    },
    "build-umd:min": {
      "command": "babel-node scripts/compile --copy-files",
      "env": {
        "NODE_ENV": "production",
        "BABEL_ENV": "umd",
        "DEBUG": "react-aaui:*"
      }
    },
    "release": {
      "command": "babel-node scripts/release",
      "env": {
        "NODE_ENV": "production",
        "DEBUG": "react-aaui:*"
      }
    },
    "release:ci": {
      "command": "babel-node scripts/release",
      "env": {
        "NODE_ENV": "production",
        "CI_ENV": "JENKINS",
        "DEBUG": "react-aaui:*"
      }
    },
    "sample": {
      "command": "babel-node scripts/server",
      "env": {
        "NODE_ENV": "test",
        "DEBUG": "react-aaui:*"
      }
    }
  },
  "dependencies": {
    "active.css": "git+ssh://git@gitlab.dev.activenetwork.com:fee/active.css.git#v0.6.14",
    "gsap": "1.18.2",
    "react": "15.4.2",
    "react-tinymce": "0.5.1"
  },
  "description": "Active AUI implemented using React.",
  "devDependencies": {
    "babel-cli": "6.18.0",
    "babel-core": "6.21.0",
    "babel-eslint": "7.1.1",
    "babel-jest": "19.0.0",
    "babel-loader": "6.2.0",
    "babel-plugin-add-module-exports": "0.2.1",
    "babel-plugin-transform-runtime": "6.15.0",
    "babel-plugin-webpack-loaders": "0.8.0",
    "babel-preset-latest": "6.16.0",
    "babel-preset-react": "6.3.13",
    "babel-preset-stage-0": "6.3.13",
    "babel-runtime": "6.11.6",
    "better-npm-run": "0.0.11",
    "child-process-promise": "2.1.3",
    "colors": "1.1.2",
    "copy-promise": "0.0.1",
    "css-loader": "0.23.0",
    "cssnano": "3.7.4",
    "debug": "2.2.0",
    "enzyme": "2.4.1",
    "eslint": "3.12.2",
    "eslint-config-airbnb": "13.0.0",
    "eslint-plugin-babel": "4.0.0",
    "eslint-plugin-import": "2.2.0",
    "eslint-plugin-jest": "19.0.1",
    "eslint-plugin-jsx-a11y": "2.2.3",
    "eslint-plugin-react": "6.8.0",
    "extract-text-webpack-plugin": "0.9.1",
    "file-loader": "0.8.5",
    "fs-extra": "0.30.0",
    "fs-promise": "0.5.0",
    "glob": "7.0.6",
    "html-webpack-plugin": "2.22.0",
    "html-webpack-template": "5.1.1",
    "husky": "0.13.1",
    "imports-loader": "0.6.5",
    "jest": "19.0.2",
    "jsdom": "9.8.0",
    "json-loader": "0.5.4",
    "less": "2.7.1",
    "less-loader": "2.2.2",
    "lodash": "3.10.1",
    "mkdirp": "0.5.1",
    "moment": "2.13.0",
    "null-loader": "0.1.1",
    "nyc": "8.3.2",
    "postcss-custom-media": "5.0.1",
    "postcss-loader": "0.11.1",
    "postcss-reporter": "1.4.1",
    "properties-parser": "0.3.1",
    "react-addons-perf": "15.4.2",
    "react-addons-test-utils": "15.4.1",
    "react-dom": "15.4.1",
    "react-test-renderer": "15.4.2",
    "readline-sync": "1.4.5",
    "rimraf": "2.5.4",
    "sinon": "1.17.6",
    "style-loader": "0.13.0",
    "webpack": "1.13.2",
    "webpack-dev-server": "1.15.1",
    "yargs": "5.0.0"
  },
  "files": [
    "amd",
    "dist",
    "es",
    "i18n",
    "lib"
  ],
  "gitHead": "5ee7430b894a653a2b75b9201b44846754d61d3e",
  "jest": {
    "bail": true,
    "cacheDirectory": "./node_modules/.cache",
    "testEnvironment": "jsdom",
    "testPathIgnorePatterns": [
      "__mocks__"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    },
    "testRegex": "test/.*\\.jsx?$",
    "moduleFileExtensions": [
      "",
      "json",
      "js",
      "jsx",
      "less"
    ],
    "modulePaths": [
      "<rootDir>"
    ],
    "moduleNameMapper": {
      "^imports": "<rootDir>/build/jestImportsMock.js",
      "\\.(css|less)$": "<rootDir>/build/jestStyleMock.js"
    }
  },
  "jsnext:main": "es/index.js",
  "keywords": [
    "AUI",
    "AAUI",
    "React",
    "component",
    "components"
  ],
  "license": "UNLICENSED",
  "main": "lib/index.js",
  "module": "es/index.js",
  "name": "react-aaui",
  "optionalDependencies": {},
  "private": true,
  "readme": "# Active AUI\n\n[![PRs Welcome](https://img.shields.io/badge/prs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\n> This library contains a set of components conforming to the product styleguide for AUI for use with React.\n\n## Table of Contents\n\n- [Background](#background)\n- [Features](#features)\n- [Browser compatibility](#browser-compatibility)\n- [Build](#build)\n- [Installation](#install)\n- [Usage](#usage)\n- [Dev Env Setup](#dev-env-setup)\n- [Tests](#tests)\n- [Versioning](#versioning)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Background\n\nBefore, we always craft our web app based on [arch-html](https://gitlab.dev.activenetwork.com/EnterpriseArchitecture/html) which is a JavaScript framework built and consumed by ACTIVE internal.\nIt's built upon RequireJS + jQuery and provide lots of reusable components. However, it's hard for us to maintain and custimized it according to various requirements, so we decide to\nre-create all of the components based on React.\n\nReact is a JavaScript library for building user interfaces, it renders stuff quickly in the browser, but that's not of primary concern to most developers. What really matters is to be able to change stuff safely, and add improvements or features easily as our app grows large.\n\nAlso we can gradullay introduce it to an existing project, even if you work on a few years old legacy application you can still design a new screen using it, it not all or nothing.\n\n## Features\n\n- It's a library, not a framework\n- Declarative components (tags like HTML)\n- Will not mess up your CSS\n- Customized builds, use only what you need\n- Customization of components styles possible\n- Composable and reusable\n\n## Browser compatibility\n\nIE10 and above are supported.\n\n## Build\n\nBuild `react-aaui` with **AMD**, **CommonJS** or **ES** module formats.\n\n```bash\nnpm run build\n```\n\nBtw, we also support **[jsnext:main](https://github.com/rollup/rollup/wiki/jsnext:main)**.\n\n> jsnext:main  will point to a module that has ES2015 module syntax but otherwise only syntax features that node supports.\n\n## Release\n\nWe need to automate the release process in order to make it consumed by others for conveniently.\n\n```bash\nnpm run release\n```\n\nThe release script will do:\n\n1. Make sure the tests pass\n1. Increment the package version in package.json\n1. Create a new commit\n1. Create a **v*** tag that points to that commit\n1. Build and publish the **AMD**, **CommonJS** or **ES** module formats, then create a new commit for it\n1. Push the **v*** tag to GitLab\n1. Push the **latest** tag to GitLab\n\nRefer to [release.js](https://gitlab.dev.activenetwork.com/fee/react-aaui/blob/master/bin/release.js) for more details.\n\n## Install\n\nInstall `react-aaui` with npm and have your `package.json` configured like the way below:\n\n```JavaScript\n\n{\n  \"dependencies\": {\n    \"react-aaui\": \"git+ssh://git@gitlab.dev.activenetwork.com:fee/react-aaui.git\"\n  },\n  ...\n}\n```\n\nThen run `npm i`.\n\nConfigure your Webpack so it:\n\n- Loads LESS files, image files and font files\n- Include `node_modules/react-aaui` in your loaders\n\n```JavaScript\n{\n  ...,\n  resolve: {\n    extensions: ['', '.js', '.less'],\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules(?!\\/react-aaui)/,\n        loader: \"babel\",\n        query: {\n          presets: [\"es2015\", \"stage-2\", \"react\"],\n          cacheDirectory: true\n        }\n      },\n      {\n        test: /\\.json$/,\n        exclude: /node_modules/,\n        loader: 'json-loader',\n      },\n      {\n        test: /\\.(png|jpg|gif)$/,\n        exclude: /node_modules(?!\\/react-aaui)/,\n        ...\n      },\n      {\n        test: /\\.less$/,\n        exclude: /node_modules(?!\\/react-aaui)/,\n        ...\n      },\n      {\n        test: /\\.(eot|ttf|svg|woff|woff2)$/,\n        exclude: /node_modules(?!\\/react-aaui)/,\n        ...\n      },\n      ...\n    ]\n  },\n  ...\n```\n\n## Usage\n\nFor convenience, React AAUI exposes its full API on the top-level `react-aaui` import. However, this causes the entire React AAUI library and its dependencies to be included in client bundles that include code that imports from the top-level CommonJS bundle.\n\nInstead, the bindings exported from `react-aaui` are also available in `react-aaui/lib`. When using CommonJS modules, you can import directly from `react-aaui/lib` to avoid pulling in unused modules.\n\nAssuming you are transpiling ES2015 modules into CommonJS modules, instead of:\n\n```JavaScript\nimport { Button, Alert, Checkbox } from 'react-aaui'\n```\n\nuse:\n\n```JavaScript\nimport Button from 'react-aaui/lib/Button'\nimport Alert from 'react-aaui/lib/Alert'\nimport Checkbox from 'react-aaui/lib/Checkbox'\n```\n\nThe public API available in this manner is defined as the set of imports available from the top-level `react-aaui` module. Anything not available through the top-level `react-aaui` module is a private API, and is subject to change without notice.\n\n\nHere is a more comprehensive sample:\n\n```JavaScript\nimport { Button } from 'react-aaui'\n\nconst Foo = React.createClass({\n  render() {\n    <div>\n      <Button type=\"primary\" onClick={this.onClick}>My Button</Button>\n    </div>\n  },\n\n  onClick(e) {\n    // ...\n  }\n})\n```\n\n## Dev Env Setup\n\nClone the `react-aaui` repo and `cd` into the project folder. With [npm](https://npmjs.org/) installed, run:\n\n```bash\ngit clone git@gitlab.dev.activenetwork.com:fee/react-aaui.git\ncd react-aaui\nnpm i\n```\n\nPlease notice the following points:\n\n- Source codes are placed in the **src** directory and have to be written in **ES6**\n- [LESS](http://lesscss.org/) is our CSS preprocessor, write LESS\n- We use [NPM scripts](https://docs.npmjs.com/misc/scripts) as our general task automation tool\n- [Webpack](http://webpack.github.io/docs/) is a module bundler for javascript and friends\n- For each component you write, you have to create a respective test page under `tests` folder\n- If you need to use icons(we're using [icomoon](https://icomoon.io/), ask **@kzhang** to package it or do it by yourself\n- Create branches for you features and bug fixes, if a feature or bug fix is worked on with more than 1 people, then create your own branch from the feature branch again and name it with your name. E.g, if 2 people are all working on a feature `foo`, then each one has to create their own branch from `foo` named `foo-[name]` (like `foo-seth`).\n- Strive to maintain a linear history with `git rebase`, the merging master will specifically ask you to do so before accepting merge requests. For details on how to do so, please take a look here: `smb://10.109.2.30/fee/trainings/git/merging-pull-requests.mp4`. If you want to learn more about interactive rebase, take a look here: `smb://10.109.2.30/fee/trainings/git/interactive-rebase.mp4`.\n- ~~Special naming convention has to be followed. Every name is namespaced, be it a component name, a CSS class name, a LESS variable name or a folder name. `aaui` prefix is used following by the component's name. E.g, `aaui-tabs`, `aaui-tabs-title`, `aauiTabsActive`, `@aauiTabsBgColor`. Refer to the existing source code, and be consistent.~~\n- Refer to the existing source code and project structure and be consistent.\n- No jQuery. You can probably find what you need [here](http://youmightnotneedjquery.com/)\n- Think twice before introducing any external libraries. They contribute on file size. You might want to find some *micro* alternatives or write it yourself\n\n## Samples\nRun the sample page with the command below:\n- Caution: default generate samples for all components, have great performance issue)\n```bash\nnpm run sample\n```\n\n## Samples for specific components\n\nRun the sample page with the command below:\n\n```bash\nnpm run sample -- --components=input,button\n```\n\n## Extract properties files to json files\n\nRun the sample page with the command below:\n```bash\nPARSE_SRC=sourceDirectory PARSE_DIST=distDirectory PARSE_NAME=allInOneJsonFileName babel-node bin/parse-properties.js\n```\n\n## Test\n\nRun the unit test with command below:\n\n```bash\nnpm test\n```\n\n## Contribute\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md).\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, it is maintained under [the Semantic Versioning guidelines](http://semver.org/). Sometimes we screw up, but we'll adhere to those rules whenever possible.\n\n## License\n\n**PRIVATE**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https:git@gitlab.dev.activenetwork.com:fee/react-aaui.git"
  },
  "scripts": {
    "build": "better-npm-run build",
    "build-cjs": "better-npm-run build-cjs",
    "build-es": "better-npm-run build-es",
    "build-umd": "better-npm-run build-umd",
    "build-umd:min": "better-npm-run build-umd:min",
    "clean": "rimraf amd dist lib es",
    "lint": "eslint src test",
    "parse-properties": "better-npm-run parse-properties:common && better-npm-run parse-properties:form-validation && better-npm-run parse-properties:form-localization",
    "prepush": "npm run lint && npm test",
    "release": "better-npm-run release",
    "release:ci": "better-npm-run release:ci",
    "sample": "better-npm-run sample",
    "test": "better-npm-run test",
    "test:watch": "jest --watch --coverage"
  },
  "version": "1.8.26"
}
