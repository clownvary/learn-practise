'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _taggedTemplateLiteralLoose2 = require('babel-runtime/helpers/taggedTemplateLiteralLoose');

var _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _templateObject = (0, _taggedTemplateLiteralLoose3.default)(['aaui-tageditor\n          ', '\n          ', ''], ['aaui-tageditor\n          ', '\n          ', '']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _dataAccess = require('./shared/data-access');

var da = _interopRequireWildcard(_dataAccess);

var _utils = require('./shared/utils');

var _Tag = require('./Tag');

var _Tag2 = _interopRequireDefault(_Tag);

require('./TagEditor.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lastFocusedElement = null;

function trackLastFocusedElement() {
  lastFocusedElement = document.activeElement;
}

function stopPropagation(e) {
  e.stopPropagation();
}

var propTypes = {
  className: _react.PropTypes.string,
  data: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.object]).isRequired,
  onChange: _react.PropTypes.func,
  errored: _react.PropTypes.bool
};

var defaultProps = {
  data: [],
  errored: false
};

var TagEditor = function (_PureComponent) {
  (0, _inherits3.default)(TagEditor, _PureComponent);

  function TagEditor() {
    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, TagEditor);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.addTag = function () {
      if (lastFocusedElement && lastFocusedElement.tagName === 'INPUT') return;
      var d = _this.props.data;
      var data = da.push((0, _from2.default)(d), { text: 'your tag name', isNew: true });
      var onChange = _this.props.onChange;
      if (onChange) onChange(data);
    }, _this.removeTag = function (ind) {
      return function () {
        var d = _this.props.data;
        var data = da.del((0, _from2.default)(d), ind);
        var onChange = _this.props.onChange;
        if (onChange) onChange(data);
      };
    }, _this.editTag = function (ind) {
      return function (text, isKeyFinished) {
        var d = _this.props.data;
        var data = d;
        if (text === '') {
          data = da.del((0, _from2.default)(d), ind);
        } else {
          data = da.set((0, _from2.default)(d), ind, { text: text });

          if (isKeyFinished && ind === da.count(d) - 1) {
            data = da.push((0, _from2.default)(data), { text: 'your tag name', isNew: true });
          }
        }

        var onChange = _this.props.onChange;
        if (onChange) onChange(data);
      };
    }, _this.removeEmptyTagIfNew = function (ind) {
      return function () {
        var d = _this.props.data;
        var data = d;

        if (da.getIn(d, ind, 'isNew')) {
          data = da.del((0, _from2.default)(d), ind);
          var onChange = _this.props.onChange;
          if (onChange) onChange(data);
        }
      };
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  TagEditor.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (da.count(this.props.data) > da.count(prevProps.data)) {
      var lastTag = this.tag;
      if (lastTag) lastTag.toInput();
    }
  };

  TagEditor.prototype.render = function render() {
    var _this2 = this;

    /* eslint-disable no-unused-vars */
    var _props = this.props,
        className = _props.className,
        data = _props.data,
        onChange = _props.onChange,
        errored = _props.errored,
        rest = (0, _objectWithoutProperties3.default)(_props, ['className', 'data', 'onChange', 'errored']);


    return _react2.default.createElement(
      'div',
      (0, _extends3.default)({
        className: (0, _utils.cls)(_templateObject, errored ? 'aaui-tageditor-errored' : '', className || '')
      }, rest, {
        onMouseDown: trackLastFocusedElement,
        onClick: this.addTag
      }),
      data.map(function (tag, i) {
        return _react2.default.createElement(_Tag2.default, {
          key: i,
          ref: function ref(tagRef) {
            _this2.tag = tagRef;
          },
          value: da.get(tag, 'text'),
          isNew: !!da.get(tag, 'isNew'),
          editMode: true,
          onChange: _this2.editTag(i),
          onCancel: _this2.removeEmptyTagIfNew(i),
          onClose: _this2.removeTag(i),
          onClick: stopPropagation
        });
      })
    );
  };

  return TagEditor;
}(_react.PureComponent);

exports.default = TagEditor;


TagEditor.displayName = 'AAUITagEditor';
TagEditor.propTypes = propTypes;
TagEditor.defaultProps = defaultProps;
module.exports = exports['default'];