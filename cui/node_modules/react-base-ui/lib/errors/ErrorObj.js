'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _ErrorTypeEnum = require('./consts/ErrorTypeEnum');

var ErrorTypeEnum = _interopRequireWildcard(_ErrorTypeEnum);

var _messages = require('../messages');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ErrorObj = function () {
  function ErrorObj() {
    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ErrorTypeEnum.APP;
    var messages = arguments[1];
    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    (0, _classCallCheck3.default)(this, ErrorObj);

    this.type = type;
    if (messages instanceof _messages.MessageGroup) {
      this.messageGroup = messages;
    } else {
      this.messageGroup = new _messages.MessageGroup(_messages.MessageTypeEnum.ERROR, messages);
    }

    this.data = data;
  }

  ErrorObj.isException = function isException(error) {
    return error instanceof Error;
  };

  ErrorObj.isErrorObj = function isErrorObj(error) {
    return error instanceof ErrorObj;
  };

  return ErrorObj;
}();

exports.default = ErrorObj;
module.exports = exports['default'];