import unescape from 'lodash/unescape';
import isString from 'lodash/isString';
import React, { PureComponent, PropTypes } from 'react'; //  eslint-disable-line no-unused-vars
import Alert from 'react-aaui/lib/Alert';
import * as MessageTypeEnum from '../../consts/MessageTypeEnum';

import './index.less';

export default class Messages extends PureComponent {
  static displayName = 'Messages';

  static propTypes = {
    msgGroup: PropTypes.shape({}),
    onClose: PropTypes.func
  };

  static defaultProps = {
  };

  render() {
    const { msgGroup, onClose } = this.props;
    const { messages = [], type, id, title, dismissable = false } = msgGroup;
    const alertType = type === MessageTypeEnum.ERROR ? 'danger' : type;
    const contentClass = messages.length > 1 ? 'message-content' : 'message-content single-line';

    return (
      <Alert
        key={id}
        type={alertType}
        noClose={!dismissable}
        onClose={() => onClose(id)}
        className="message-box"
      >
        <div className={contentClass}>
          {
            title ? <span className="title">{title}</span> : undefined
          }

          <ul>
            {messages.map((line, i) => {
              if (isString(line)) {
                return <li key={i}>{unescape(line)}</li>;
              }

              return <li key={i}>{line}</li>;
            })}
          </ul>
        </div>
      </Alert>
    );
  }
}
