import emitter from './emitter';
import MessageGroup from './MessageGroup';
import * as MessageTypeEnum from './consts/MessageTypeEnum';
import MessageBoard from './components/MessageBoard';


export {
  MessageGroup,
  MessageTypeEnum,
  MessageBoard
};


let defaultOptions = {
  noDuplicated: true,
  autoClean: true,
  dismissable: false,
  topOnly: true
};

const createService = type =>
  (messages, options = {}) => {
    options = { ...defaultOptions, options };
    const msgGroup = messages instanceof MessageGroup ? messages : new MessageGroup(type, messages);
    msgGroup.type = type;
    emitter.emit('add/notify', msgGroup, options);

    return msgGroup.id;
  };

export const showSuccess = createService(MessageTypeEnum.SUCCESS);
export const showInfo = createService(MessageTypeEnum.INFO);
export const showWarning = createService(MessageTypeEnum.WARNING);
export const showError = createService(MessageTypeEnum.ERROR);
export const cleanMessages = () => emitter.emit('clean/notify', '');
export const cleanMessagesByType = type => emitter.emit('clean/notify', type);
export const configMessageService = (options) => {
  defaultOptions = Object.assign(defaultOptions, options);
};
