'use strict';

exports.__esModule = true;
exports.createForm = undefined;

var _extends3 = require('babel-runtime/helpers/extends');

var _extends4 = _interopRequireDefault(_extends3);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('active.css/less/components/form.less');

require('active.css/less/components/grid.less');

var _Alert = require('./Alert');

var _Alert2 = _interopRequireDefault(_Alert);

var _HFormFieldLayout = require('./form/HFormFieldLayout');

var _HFormFieldLayout2 = _interopRequireDefault(_HFormFieldLayout);

var _createField = require('./form/createField');

var _createField2 = _interopRequireDefault(_createField);

var _store = require('./form/store');

var _store2 = _interopRequireDefault(_store);

var _utils = require('./shared/utils');

var _types = require('./form/types');

var _module = require('./form/module');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormDefaultConfig = {
  preSubmit: _utils.noop,
  shouldSubmit: function shouldSubmit() {
    return true;
  },
  onSubmit: _utils.noop,
  postSubmit: _utils.noop,
  onFail: _utils.noop,
  onChange: _utils.noop,
  fields: {}
};

var Form = function (_PureComponent) {
  (0, _inherits3.default)(Form, _PureComponent);

  function Form(props, context) {
    (0, _classCallCheck3.default)(this, Form);

    /*
      fields: {
        firstName: {
          defaultValue: 'first name',
          validator: validator,
          rules: '',
          parser: v => v,
          formatter: v => v,
        },
        email: {
          defaultValue: 'defalut@defalut.com',
        },
      },
    */
    // Every form field input is treated as contorlled
    // Convert `defaultValue` to `value`
    var _this = (0, _possibleConstructorReturn3.default)(this, _PureComponent.call(this, props, context));

    _initialiseProps.call(_this);

    var fieldKeys = (0, _keys2.default)(props.fields);
    var formFieldKeys = (0, _keys2.default)(_types.FormFieledPropTypes);
    var fields = fieldKeys.reduce(function (r, name) {
      var _extends2;

      return (0, _extends4.default)({}, r, (_extends2 = {}, _extends2[name] = (0, _extends4.default)({}, (0, _utils.filterProps)(props.fields[name], formFieldKeys), {
        value: props.fields[name].defaultValue
      }), _extends2));
    }, {});
    // Sync the `this.state` and `this.store.currentState`
    _this.state = {
      fields: fields,
      isValid: true
    };
    _this.store = new _store2.default((0, _extends4.default)({}, props, {
      initialState: fields
    }));
    return _this;
  }

  Form.prototype.getChildContext = function getChildContext() {
    return {
      aauiFormStore: this.store
    };
  };

  Form.prototype.componentDidMount = function componentDidMount() {
    this.unsubscribe = this.store.subscribe(this.handleChange);
  };

  Form.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
    }
  };

  Form.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        _props$className = _props.className,
        className = _props$className === undefined ? 'form--horizontal' : _props$className;
    var _state = this.state,
        isValid = _state.isValid,
        fields = _state.fields;

    // Todo: Update the error message

    return _react2.default.createElement(
      'form',
      { className: className, onSubmit: this.handleSubmit },
      !isValid && _react2.default.createElement(
        _Alert2.default,
        { type: 'danger', noClose: true },
        _react2.default.createElement(
          'strong',
          null,
          'Error'
        )
      ),
      _react2.default.Children.map(children, function (child) {
        if ((0, _createField.isRegisteredField)(child.type)) {
          return _react2.default.cloneElement(child, (0, _extends4.default)({}, fields[child.props.name]));
        } else {
          return child;
        }
      })
    );
  };

  return Form;
}(_react.PureComponent);

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.handleSubmit = function (e) {
    /* eslint-disable */
    e && e.preventDefault && e.preventDefault();

    var validationResults = _this2.store.tryInvokeValidators();

    validationResults.forEach(function (r) {
      if (r.errMsg) {
        _this2.store.dispatch((0, _module.setError)({
          name: r.name,
          value: r.errMsg
        }));
      }
    });

    var _props2 = _this2.props,
        preSubmit = _props2.preSubmit,
        shouldSubmit = _props2.shouldSubmit,
        onSubmit = _props2.onSubmit,
        postSubmit = _props2.postSubmit,
        onFail = _props2.onFail;

    var fields = _this2.store.getState();
    var values = {};
    var errors = {};
    var reducerKeys = (0, _keys2.default)(fields);

    for (var i = 0; i < reducerKeys.length; i++) {
      var key = reducerKeys[i];

      values[key] = fields[key].value;
      errors[key] = fields[key].errMsg;
    }

    var isValid = (0, _keys2.default)(fields).every(function (k) {
      return !fields[k].errMsg;
    });

    if (!isValid) {
      return onFail(errors);
    }

    if (shouldSubmit(values, preSubmit(values))) {
      onSubmit(values);
    }

    return postSubmit(values);
  };

  this.handleChange = function () {
    var fields = _this2.store.getState();
    var isValid = (0, _keys2.default)(fields).every(function (k) {
      return !fields[k].errMsg;
    });

    if (!(0, _utils.shallowEqual)(_this2.state.fields, fields)) {
      _this2.setState({ isValid: isValid, fields: fields }, function () {
        var onChange = _this2.props.onChange;


        onChange(fields);
      });
    }
  };
};

exports.default = Form;


Form.propTypes = (0, _extends4.default)({}, _types.FormPropTypes);
Form.childContextTypes = {
  aauiFormStore: _react.PropTypes.object.isRequired
};
Form.defaultProps = (0, _extends4.default)({}, FormDefaultConfig);
Form.displayName = 'AAUIForm';
// Form Fields
Form.Field = (0, _createField2.default)();
Form.HField = (0, _createField2.default)(_HFormFieldLayout2.default);

/**
 * Provide utility function and lifecycle methods for `Form`
 */
var createForm = exports.createForm = function createForm() {
  var formConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (WrappedComponent) {
    var Connect = function (_PureComponent2) {
      (0, _inherits3.default)(Connect, _PureComponent2);

      function Connect() {
        (0, _classCallCheck3.default)(this, Connect);
        return (0, _possibleConstructorReturn3.default)(this, _PureComponent2.apply(this, arguments));
      }

      Connect.prototype.render = function render() {
        return _react2.default.createElement(WrappedComponent, this.props);
      };

      return Connect;
    }(_react.PureComponent);

    Connect.defaultProps = (0, _extends4.default)({}, FormDefaultConfig, formConfig);

    return Connect;
  };
};