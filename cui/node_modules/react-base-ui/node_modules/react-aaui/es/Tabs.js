import _Object$defineProperties from 'babel-runtime/core-js/object/define-properties';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent, PropTypes } from 'react';
import 'active.css/less/components/tab.less';

import getContext from './shared/getContext';
import TabsHeader from './TabsHeader';
import TabsTitle from './TabsTitle';
import TabsContainer from './TabsContainer';
import { tabsAPIShape } from './shared/types';

var string = PropTypes.string,
    object = PropTypes.object,
    func = PropTypes.func,
    any = PropTypes.any;


var propTypes = {
  className: string,
  style: object,
  selected: string,
  defaultSelected: string,
  onChange: func,
  children: any
};

var childContextTypes = {
  aauiTabsAPI: tabsAPIShape
};

var Tabs = function (_PureComponent) {
  _inherits(Tabs, _PureComponent);

  function Tabs(props) {
    _classCallCheck(this, Tabs);

    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));

    _this.getSelected = function () {
      return _this.state.selected;
    };

    _this.select = function (name) {
      if (_this.props.selected === undefined) {
        _this.setState({
          selected: name
        }, function () {
          if (_this.props.onChange) _this.props.onChange(name);
        });
      } else if (_this.props.onChange) _this.props.onChange(name);
    };

    _this.state = {
      selected: props.selected || props.defaultSelected
    };
    return _this;
  }

  Tabs.prototype.getChildContext = function getChildContext() {
    return {
      aauiTabsAPI: {
        select: this.select,
        getSelected: this.getSelected
      }
    };
  };

  Tabs.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    _Object$defineProperties(this, {
      selected: {
        get: function get() {
          return this.state.selected;
        },
        set: function set(v) {
          if (this.props.selected === undefined) {
            this.setState({
              selected: v
            });
          }
        }
      }
    });

    if (this.state.selected == null) {
      React.Children.forEach(this.props.children, function (child) {
        if (child.type === Tabs.Container) {
          _this2.setState({
            selected: child.props.name
          });
        }
      });
    }
  };

  Tabs.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var defaultSelected = nextProps.defaultSelected !== this.props.defaultSelected ? nextProps.defaultSelected : this.state.selected;
    var newState = {
      selected: nextProps.selected !== this.props.selected ? nextProps.selected : defaultSelected
    };

    if (newState.selected !== this.state.selected) this.setState(newState);
  };

  Tabs.prototype.render = function render() {
    var _props = this.props,
        className = _props.className,
        style = _props.style,
        children = _props.children;


    return React.createElement(
      'div',
      {
        className: className || '',
        style: style
      },
      children
    );
  };

  return Tabs;
}(PureComponent);

export default Tabs;


Tabs.displayName = 'AAUITabs';
Tabs.propTypes = propTypes;
Tabs.childContextTypes = childContextTypes;

Tabs.Header = TabsHeader;
Tabs.Title = getContext(childContextTypes)(TabsTitle);
Tabs.Container = getContext(childContextTypes)(TabsContainer);
module.exports = exports['default'];