import _taggedTemplateLiteralLoose from 'babel-runtime/helpers/taggedTemplateLiteralLoose';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _templateObject = _taggedTemplateLiteralLoose(['more-button ', ''], ['more-button ', '']);

import React, { PureComponent, PropTypes } from 'react';
import 'active.css/less/components/more-button.less';

import { cls } from './shared/utils';
import * as da from './shared/data-access';
import Dropdown from './Dropdown';

var string = PropTypes.string,
    object = PropTypes.object,
    bool = PropTypes.bool;


var propTypes = {
  className: string,
  title: string,
  data: object,
  style: object,
  filter: bool,
  filterPlaceholder: string,
  disabled: bool
};

var defaultProps = {
  title: 'More'
};

var MoreButton = function (_PureComponent) {
  _inherits(MoreButton, _PureComponent);

  function MoreButton() {
    var _temp, _this, _ret;

    _classCallCheck(this, MoreButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.invokeAction = function (_ref) {
      var k = _ref.value;

      da.get(_this.props.data, k)();
    }, _this.render = function () {
      var _this$props = _this.props,
          className = _this$props.className,
          style = _this$props.style,
          title = _this$props.title,
          filter = _this$props.filter,
          filterPlaceholder = _this$props.filterPlaceholder,
          disabled = _this$props.disabled;

      var data = da.keys(_this.props.data).map(function (k) {
        return { text: k, value: k };
      });

      return React.createElement(Dropdown, {
        className: cls(_templateObject, className || ''),
        style: style,
        placeholder: title,
        filter: filter,
        filterPlaceholder: filterPlaceholder,
        data: data,
        value: '',
        disabled: disabled,
        isMoreButton: true,
        onChange: _this.invokeAction
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  return MoreButton;
}(PureComponent);

export default MoreButton;


MoreButton.displayName = 'AAUIMoreButton';
MoreButton.propTypes = propTypes;
MoreButton.defaultProps = defaultProps;
module.exports = exports['default'];