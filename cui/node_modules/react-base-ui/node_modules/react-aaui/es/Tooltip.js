import _taggedTemplateLiteralLoose from 'babel-runtime/helpers/taggedTemplateLiteralLoose';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _templateObject = _taggedTemplateLiteralLoose(['tooltips\n                       ', '\n                       tooltips--', '\n                       ', ''], ['tooltips\n                       ', '\n                       tooltips--', '\n                       ', '']);

import React, { PureComponent, PropTypes } from 'react';
import 'active.css/less/components/tooltip.less';

import { cls } from './shared/utils';

var propTypes = {
  className: PropTypes.string,
  style: PropTypes.object,
  theme: PropTypes.string,
  label: PropTypes.string,
  direction: PropTypes.string,
  children: PropTypes.any
};

var defaultProps = {
  direction: 'n'
};

var Tooltip = function (_PureComponent) {
  _inherits(Tooltip, _PureComponent);

  function Tooltip() {
    _classCallCheck(this, Tooltip);

    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));
  }

  Tooltip.prototype.render = function render() {
    var _props = this.props,
        className = _props.className,
        style = _props.style,
        theme = _props.theme,
        direction = _props.direction,
        children = _props.children,
        label = _props.label;


    return React.createElement(
      'span',
      {
        className: cls(_templateObject, theme ? 't-' + theme : '', direction, className || ''),
        style: style
      },
      label,
      React.createElement(
        'span',
        { className: 'tooltips__content' },
        children
      )
    );
  };

  return Tooltip;
}(PureComponent);

export default Tooltip;


Tooltip.displayName = 'AAUITooltip';
Tooltip.propTypes = propTypes;
Tooltip.defaultProps = defaultProps;
module.exports = exports['default'];